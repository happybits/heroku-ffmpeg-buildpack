#!/bin/sh

echo "-----> Install ffmpeg"
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="vendor"

export "GIT_OAUTH=$(cat $ENV_DIR/GIT_OAUTH)"

indent() {
  sed 's/^/       /'
}

create_profile_script () {
	echo "exporting PATH and LIBRARY_PATH" | indent

	PROFILE_PATH="${BASE_DIR}/.profile.d/ffmpeg.sh"
	mkdir -p $(dirname $PROFILE_PATH)
	echo 'export PATH="$PATH:$HOME/vendor/bin"' >> $PROFILE_PATH
	echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/vendor/lib"' >> $PROFILE_PATH
}

# begin yasm

BASE_DIR="$1"

mkdir -p "$1/vendor"
export BUILD_DIR=$1"/vendor"
export PATH="$BUILD_DIR/bin:"$PATH
echo "-----> Building in $BUILD_DIR"


if [ -f "$2/vendor/bin/yasm" ] && [ -f "$2/vendor/bin/lame" ] && [ -f "$2/vendor/bin/ffmpeg" ]; then
	echo "Using cached build." | indent
	cp -R  "$2/vendor" $1
	create_profile_script
	exit 0
fi
echo "-----> Starting yasm compilation"

echo "Downloading yasm-1.3.0.tar.gz" | indent
wget --quiet https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
echo "Unpacking yasm" | indent
tar -xf yasm-1.3.0.tar.gz
cd yasm-1.3.0
echo "Running configure" | indent
./configure --prefix="$BUILD_DIR" --disable-debug >/dev/null 2>&1
echo "Running make with target install" | indent
make install >/dev/null 2>&1
echo "Running make with target distclean" | indent
make distclean > /dev/null 2>&1


# begin lame

echo "-----> Starting lame compilation"
echo "Downloading lame-3.99.5.tar.gz" | indent
wget --quiet https://downloads.sourceforge.net/sourceforge/lame/lame-3.99.5.tar.gz
echo "Unpacking lame" | indent
tar -xf lame-3.99.5.tar.gz
cd lame-3.99.5
echo "Running configure" | indent
./configure --disable-dependency-tracking --disable-debug --prefix="$BUILD_DIR" --enable-nasm >/dev/null 2>&1
echo "Running make with target install" | indent
make install >/dev/null 2>&1
echo "Running make with target distclean" | indent
make distclean > /dev/null 2>&1

# begin x264

echo "----> Starting x2464 compilation"
echo "Cloning x264 repo" | indent
git clone git://git.videolan.org/x264.git >/dev/null 2>&1
cd x264
echo "Switching to pre-nasm commit" | indent
git reset --hard 8c2974255b01728d4eda2434cc1997c4a3ca5eff
echo "Running configure" | indent
./configure --prefix="$BUILD_DIR" --enable-static --enable-shared >/dev/null 2>&1
echo "Running make with target install" | indent
make install >/dev/null 2>&1
echo "Running make with target distclean" | indent
make distclean > /dev/null 2>&1


# begin ffmpeg

echo "Cloning happybits ffmpeg" | indent
cd $BUILD_DIR
git clone https://$GIT_OAUTH@github.com/happybits/happybits-ffmpeg-fork
cd happybits-ffmpeg-fork
./configure --prefix="$BUILD_DIR" ]
make
make install

# echo "-----> Starting ffmpeg compilation"
# echo "Downloading ffmpeg-3.0.2.tar.bz2" | indent
# wget --quiet https://ffmpeg.org/releases/ffmpeg-3.0.2.tar.bz2
# echo "Unpacking ffmpeg" | indent
# bzip2 -d ffmpeg-3.0.2.tar.bz2
# tar -xf ffmpeg-3.0.2.tar
# cd ffmpeg-3.0.2
# echo "Running configure" | indent
#
# ./configure  --prefix="$BUILD_DIR" --enable-libmp3lame --enable-libfdk-aac --extra-cflags="-I$BUILD_DIR/include" --extra-ldflags="-L$BUILD_DIR/lib" --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-hardcoded-tables --enable-avresample --enable-nonfree --enable-libx264 --disable-doc #>/dev/null 2>&1
#
# echo "Running make with target install" | indent
# make install #>/dev/null 2>&1
# echo "Running make with target distclean" | indent
# make distclean #> /dev/null 2>&1

echo "-----> Caching build."
mkdir -p $2
cp -R "$BUILD_DIR/" $2

create_profile_script
